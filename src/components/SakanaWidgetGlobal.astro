---
export interface Props {
  id?: string;
  size?: number;
  character?: 'chisato' | 'takina';
  controls?: boolean;
  draggable?: boolean;
}

const {
  id = 'sakana-widget',
  size = 200,
  character = 'chisato',
  controls = true,
  draggable = true
} = Astro.props;
---

<div id={id} data-size={size} data-character={character} data-controls={controls} data-draggable={draggable}></div>

<script>
  // 全局加载SakanaWidget
  (async () => {
    try {
      const SakanaWidget = await import('sakana-widget');
      const SakanaWidgetCSS = await import('sakana-widget/lib/index.css');
      
      // 注册到全局
      window.SakanaWidget = SakanaWidget.default;
      
      // 自动初始化所有sakana组件
      const containers = document.querySelectorAll('[id*="sakana"]');
      containers.forEach(container => {
        if (container.hasAttribute('data-character') && !container.hasAttribute('data-initialized')) {
          const size = parseInt(container.getAttribute('data-size') || '200');
          const character = container.getAttribute('data-character') || 'chisato';
          const controls = container.getAttribute('data-controls') !== 'false';
          const draggable = container.getAttribute('data-draggable') !== 'false';
          
          new SakanaWidget.default({
            size,
            character: character as 'chisato' | 'takina',
            controls,
            draggable
          }).mount(container);
          
          container.setAttribute('data-initialized', 'true');
        }
      });
    } catch (error) {
      console.error('Failed to load SakanaWidget:', error);
    }
  })();
</script>